server.port=${PORT:0}
spring.application.name=users-ws
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
spring.devtools.restart.enabled=true

#permits having multiple instances of UsersApi appear in eureka Server by creating different instance-id's
#Command to pass a name to spring.application.instance_id to not have a random value or to pass the server.port
#mvnw spring-boot:run -Dspring-boot.run.arguments=--spring.application.instance_id=joao
#mvnw spring-boot:run -Dspring-boot.run.arguments="--spring.application.instance_id=joao --server.port=8999"
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


spring.datasource.url=jdbc:mysql://localhost:3306/app
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql= true


spring.config.import=optional:configserver:http://localhost:8012/
management.endpoints.web.exposure.include=*
#to expose specific endpoints of actuator
#management.endpoints.web.exposure.include=beans,health,mappings,httpexchanges



gateway.ip=10.0.0.113
token.expiration_time=3600
token.secret=asdasdasdagrw546asdas54da5s45asdd45asd54as54das54d
login.url.path=/users/login
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#Feign
logging.level.com.example.usersapi.data.AlbumsServiceClient=DEBUG
#required for resilience4j but already have for actuator
#management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.albums-ws.failureRateThreshold=50
resilience4j.circuitbreaker.instances.albums-ws.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.albums-ws.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-size=2
resilience4j.circuitbreaker.instances.albums-ws.minimum-number-of-calls=1
resilience4j.circuitbreaker.instances.albums-ws.event-consumer-buffer-size=10
resilience4j.retry.retry-aspect-order=2
resilience4j.retry.instances.albums-ws.max-attempts=3
resilience4j.retry.instances.albums-ws.wait-duration=2s
resilience4j.retry.instances.albums-ws.enable-exponential-backoff=true
resilience4j.retry.instances.albums-ws.exponential-backoff-multiplier=5
#One of 10 request will be traced (1 every request, 0.1 -> 1/100)
management.tracing.sampling.probability=1
logging.pattern.level=%5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]
logging.level.com.example.usersapi.service.UsersServiceImpl=DEBUG
logging.file.name=users-ws.log
